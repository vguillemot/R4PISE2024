---
title: "Multiple Factor Analysis on Wines"
format:
  html:
    code-fold: true
    code-summary: "R code"
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  echo = TRUE, 
  # dev = "svg",
  # fig.ext = "svg", 
  fig.width = 7, 
  fig.height = 7
)
```

# Prolegomena

We will need the following libraries
for this example, if these are not installed
install them with `remotes` or `pak`
```{r libraries, include=TRUE}
# de-comment the following lines to
# install missing packages
#install.packages("pak")
# pak::pak('dplyr')
library(dplyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(TExPosition)
#pak::pak('HerveAbdi/data4PCCAR')
library(data4PCCAR)
#pak::pak('HerveAbdi/PTCA4CATA')
library(FactoMineR)
suppressMessages(library(factoextra))
#pak::pak('gastonstat/colortools')
library(colortools)
library(coin)
suppressMessages(library(XLConnect))

```


# How to run an MFA


`FactoMineR` is the
 standard *R*-package for running MFA.
 As the name indicates,
 the function `FactoMineR::MFA`
 will run the MFA.
 


# The Data

The illustrative (albeit fictitious)  
data used for this example
come from a chapter 
by Hervé Abdi and Dominique
Valentin: 
Multiple factor analysis. 
In N.J. Salkind (Ed.): 
*Encyclopedia of Measurement and Statistics*. 
Thousand Oaks (CA): Sage. pp. 657—663.
This chapter can be downloaded 
from the home page of Hervé Abdi:
`https://personal.utdallas.edu/~herve/`
(look for number C40) or
directly as
`https://personal.utdallas.edu/~herve/Abdi-MFA2007-pretty.pdf`.

As long as you are there, you can also have a 
look at:

`https://personal.utdallas.edu/~herve/abdi-WiresCS-mfa-2013.pdf`
This data set is part of the `ExPosition` package

In this example, three different assessors
(named e1, e2, and e3)
evaluated 6 wines using their own descriptors.

```{r data}
data('wines2007', package = "ExPosition")
# your data (a concatenated data tables)
# Have a look
wines2007$data.
# a data frame with one row that specifies the table membership of each column of `wines2007$data`
# run mfa
group4MFA <- summary(as.factor(t(wines2007$table)))
name.group4MFA <- names(summary(as.factor(t(wines2007$table))))
resMFA <- FactoMineR::MFA(wines2007$data, # data table
                          group = group4MFA,
                          name.group = name.group4MFA,
                          graph = FALSE)
```

## Where are the results you need:

The list `resMFA` contains all the informtion 
needed to interpret the results of the analysis.




### The $\mathbf{R_v}$ coefficient matrix

```{r Rv}
resMFA$group$RV
# a nice heatmap
col <- colorRampPalette(
  c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA")
  )
plot.RV <- corrplot::corrplot(resMFA$group$RV, 
                           method = "color",
                           col = col(201), 
                           addCoef.col = "black", 
                           number.cex = 0.8, 
                           tl.col = "black", 
                           mar = c(0,0,0,0),
                           addgrid.col = "grey", 
                           tl.srt = 50)
print(plot.RV)
```
 
A first step is to look at the $R_V$ matrix---A
matrix that stores 
  the values of the $R_v$
 coefficient between pairs of the original data tables
 (adn also with the whole MFA).
 
 For MFA, these coefficients are only descriptive
 and can be interpreted like a squared coefficient of
 correlation for matrices: a value close to 1 for a pair
 of data tables
 indicates that these two tables are
 storing similar information, a value close
 to zero indicates that these tables
 store independent information.
 
<!-- HeatMap around here -->

 

#### Weights (alpha in the paper) applied to each data table

You can show the alphas with a barplot 

```{r alpha}
#Eig.tab <- demo.mfa.2007$mexPosition.Data$Compromise$compromise.eigs
Eig.tab <- c(resMFA$separate.analyses$E1$eig[1],
             resMFA$separate.analyses$E1$eig[2],
             resMFA$separate.analyses$E1$eig[3])
Alpha <- 1/sqrt(Eig.tab)
```

### Main results:




```{r eig}
#Eig4scree <- demo.mfa.2007$mexPosition.Data$Table$eigs
Eig4scree <- resMFA$global.pca$eig[,1]
Tau4scree <- resMFA$global.pca$eig[,2]
# Use factorextra
# Eigenvalues/variances of dimensions
fviz_screeplot(resMFA)
```



#### Global factor scores of the rows: 

This shows how the rows are projected 
onto the space from the point of all tables

(You want to plot them like how you plot them in PCA:
Component 1 vs. Component 2)

```{r fi.table}
fi <- resMFA$global.pca$ind$coord
fviz_mfa_ind(resMFA, col.ind = "cos2",
  gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
  repel = TRUE)
```

#### Partial factor scores of the rows: how the rows are viewed from the persepctive of each table

(You want to plot them with the global factor scores. 
Please check out the example of DiSTATIS to see how you plot them.)

```{r pfi}
# Partial individuals
fviz_mfa_ind(resMFA, partial = "all")
```

#### Loadings of variables

(You interpret them as in PCA.)

```{r q}
# Quantitative variables
fviz_mfa_var(resMFA, "quanti.var", palette = "jco", 
             repel = TRUE)
```

#### Contributions

Left as an exercise.


